openapi: 3.0.0
info:
  title: NRNA
  description: NRNA API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Contact Us
  - name: Users
  - name: News
  - name: Events
  - name: Site Settings
  - name: Auth
paths:
  /api/contact-us:
    post:
      tags:
        - Contact Us
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: name
                email: email
                phone: phone
                subject: subject
                message: message
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users:
    get:
      tags:
        - Users
      summary: get all users
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: deleted_users
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Users
      summary: create new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: asd3@gmail.com
                name: ASD dfg
                password: password
                password_confirmation: password
                country_of_residence: Nepal
                phone: '1234'
                city: KTM
                approval_status: approved
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/news:
    get:
      tags:
        - News
      summary: get all news
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - News
      summary: create news
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: News 1
                description:
                  type: string
                  example: aldjawlkdj
                status:
                  type: string
                  example: inactive
                feature_image:
                  type: string
                  format: binary
                created_by:
                  type: integer
                  example: '1'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/news/{news_id}:
    post:
      tags:
        - News
      summary: update news
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: News 1 edited
                description:
                  type: string
                  example: aldjawlkdj edited
                status:
                  type: string
                  example: active
                feature_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
                created_by:
                  type: integer
                  example: '1'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: news_id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - News
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: news_id
          in: path
          schema:
            type: integer
          required: true
          example: '9'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - News
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: news_id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/events:
    get:
      tags:
        - Events
      summary: get all events
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Events
      summary: create event
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Event 1
                description:
                  type: string
                  example: aldjawlkdj
                status:
                  type: string
                  example: inactive
                event_date:
                  type: string
                  example: '2023-05-06'
                event_time:
                  type: string
                  example: 11:06 am
                location:
                  type: string
                  example: Baneshwor
                venue:
                  type: string
                  example: Baneshword Complex
                contact_email:
                  type: string
                  example: wada@gmail.com
                contact_phone:
                  type: integer
                  example: '123123'
                map_url:
                  type: string
                  example: thpsadjwad.com
                feature_image:
                  type: string
                  format: binary
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/events/{event_id}:
    post:
      tags:
        - Events
      summary: update event
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Event 1
                description:
                  type: string
                  example: aldjawlkdj
                status:
                  type: string
                  example: inactive
                event_date:
                  type: string
                  example: '2023-05-06'
                event_time:
                  type: string
                  example: 11:06 am
                location:
                  type: string
                  example: Baneshwor
                venue:
                  type: string
                  example: Baneshword Complex
                contact_email:
                  type: string
                  example: wada@gmail.com
                contact_phone:
                  type: integer
                  example: '123123'
                map_url:
                  type: string
                  example: thpsadjwad.com
                _method:
                  type: string
                  example: PUT
                feature_image:
                  type: string
                  format: binary
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: event_id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Events
      summary: find by id
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: event_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Events
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: event_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/site-settings:
    get:
      tags:
        - Site Settings
      summary: get all site settings
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Site Settings
      summary: store site settings
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                address:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                about:
                  type: string
                mission:
                  type: string
                vision:
                  type: string
                tagline_author:
                  type: string
                tagline_description:
                  type: string
                region_logo:
                  type: string
                  format: binary
                mission_image:
                  type: string
                about_image:
                  type: string
                vision_image:
                  type: string
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - Auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@gmail.com
                password:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
